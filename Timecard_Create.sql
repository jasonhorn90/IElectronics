CREATE TABLE TIMECARD
(TIMECARD_ID NUMBER(10)
,EMPLOYEE_ID NUMBER(10)
,LOCATION_ID NUMBER(10)
,TIME_IN DATE
,TIME_OUT DATE
,TOTAL_HRS NUMBER(5,2)
,TOTAL_PAY NUMBER(10,2)
,CONSTRAINT TIMECARD PRIMARY KEY (TIMECARD_ID)
);

ALTER TABLE TIMECARD ADD
(CONSTRAINT TIME_EMP FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
,CONSTRAINT TIME_LOC FOREIGN KEY (LOCATION_ID) REFERENCES STORE_LOCATION(LOCATION_ID)
);

CREATE SEQUENCE TIMECARD_SEQ INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER INSERT_TIMECARD
BEFORE INSERT ON TIMECARD
FOR EACH ROW
DECLARE NEW_TIMECARDID NUMBER;
BEGIN
  SELECT TIMECARD_SEQ.NEXTVAL INTO NEW_TIMECARDID FROM DUAL;
  :NEW.TIMECARD_ID := NEW_TIMECARDID;
END;
/

CREATE OR REPLACE PROCEDURE ADD_TIMECARD
(EMPLOYEEID IN NUMBER
,LOCATIONID IN NUMBER
,TIMEIN IN DATE
,TIMEOUTT IN DATE
,TOTALHRS IN NUMBER
,TOTALPAY IN NUMBER
) IS
BEGIN
INSERT INTO TIMECARD (EMPLOYEE_ID, LOCATION_ID, TIME_IN, TIME_OUT, TOTAL_HRS, TOTAL_PAY)
VALUES
(EMPLOYEEID, LOCATIONID, TIMEIN, TIMEOUTT, TOTALHRS, TOTALPAY);
END;
/

CREATE OR REPLACE PROCEDURE SET_TIMECARD
(TIMECARDID IN NUMBER
,EMPLOYEEID IN NUMBER
,LOCATIONID IN NUMBER
,TIMEIN IN DATE
,TIMEOUTT IN DATE
,TOTALHRS IN NUMBER
,TOTALPAY IN NUMBER
) IS
BEGIN
UPDATE TIMECARD SET
EMPLOYEE_ID = EMPLOYEEID, LOCATION_ID = LOCATIONID, TIME_IN = TIMEIN, 
TIME_OUT = TIMEOUTT, TOTAL_HRS = TOTALHRS, TOTAL_PAY = TOTALPAY
WHERE TIMECARD_ID = TIMECARDID;
END;
/

CREATE OR REPLACE PROCEDURE DELETE_TIMECARD(TIMECARDID  IN NUMBER)
IS
BEGIN
DELETE FROM TIMECARD WHERE TIMECARD_ID = TIMECARDID;
exception when others then
declare error_code number := SQLCODE;
error_msg VARCHAR2(512) := SQLERRM;
begin
if error_code = -2291 then
dbms_output.put_line('Invalid TIMECARD_ID: ' || to_char(TIMECARDID));
else
dbms_output.put_line('Error deleting TIME CARD: ' || error_msg);
end if;
END;
end DELETE_TIMECARD;
/

